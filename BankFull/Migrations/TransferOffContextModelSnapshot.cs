// <auto-generated />
using System;
using BankFull.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankFull.Migrations
{
    [DbContext(typeof(TransferOffContext))]
    partial class TransferOffContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BankFull.Models.BankDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nchar(250)")
                        .IsFixedLength();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TransactionLimit")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar(100)")
                        .IsFixedLength();

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bank Details", (string)null);
                });

            modelBuilder.Entity("BankFull.Models.Payments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Datetime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Payment")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("BankFull.Models.PhotoSend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PhotoSends");
                });

            modelBuilder.Entity("BankFull.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Role1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role1 = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Role1 = "User"
                        },
                        new
                        {
                            Id = 3,
                            Role1 = "Agent"
                        });
                });

            modelBuilder.Entity("BankFull.Models.tblMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("tblMessage", (string)null);
                });

            modelBuilder.Entity("BankFull.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CrAmount")
                        .HasColumnType("int")
                        .HasColumnName("Cr Amount");

                    b.Property<string>("Date")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("DrAmount")
                        .HasColumnType("int")
                        .HasColumnName("Dr Amount");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("Message_Id");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("BankFull.Models.TransactionRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("TransactionRates");
                });

            modelBuilder.Entity("BankFull.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_Id");

                    b.Property<bool?>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Bharatpur",
                            Email = "niraj@gmail.com",
                            Name = "Niraj Baral",
                            Password = "$2a$11$hu7egFL.2eMi/p.X0Fc9o.ftamyrHj8HIaa2nZkWkalqY.UNTUJFq",
                            Phone = "9855075102",
                            RoleId = 1,
                            Status = true
                        });
                });

            modelBuilder.Entity("BankFull.Models.UserMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MessageId")
                        .HasColumnType("int")
                        .HasColumnName("Message_Id");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Message", (string)null);
                });

            modelBuilder.Entity("BankFull.Models.BankDetail", b =>
                {
                    b.HasOne("BankFull.Models.User", "User")
                        .WithMany("BankDetails")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Bank Details_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankFull.Models.Payments", b =>
                {
                    b.HasOne("BankFull.Models.User", "User")
                        .WithMany("Paymentss")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Bank Details_User1111");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankFull.Models.tblMessage", b =>
                {
                    b.HasOne("BankFull.Models.BankDetail", "BankDetail")
                        .WithMany("TblMessages")
                        .HasForeignKey("BankId")
                        .HasConstraintName("FK_Bank Details_User1");

                    b.Navigation("BankDetail");
                });

            modelBuilder.Entity("BankFull.Models.Transaction", b =>
                {
                    b.HasOne("BankFull.Models.tblMessage", "TblMessage")
                        .WithMany("Transactions")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK_Transaction_User");

                    b.Navigation("TblMessage");
                });

            modelBuilder.Entity("BankFull.Models.User", b =>
                {
                    b.HasOne("BankFull.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BankFull.Models.UserMessage", b =>
                {
                    b.HasOne("BankFull.Models.tblMessage", "tblMessage")
                        .WithMany("UserMessages")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("FK_User_Message_Message");

                    b.HasOne("BankFull.Models.User", "User")
                        .WithMany("UserMessages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_User_Message_User");

                    b.Navigation("User");

                    b.Navigation("tblMessage");
                });

            modelBuilder.Entity("BankFull.Models.BankDetail", b =>
                {
                    b.Navigation("TblMessages");
                });

            modelBuilder.Entity("BankFull.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BankFull.Models.tblMessage", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("UserMessages");
                });

            modelBuilder.Entity("BankFull.Models.User", b =>
                {
                    b.Navigation("BankDetails");

                    b.Navigation("Paymentss");

                    b.Navigation("UserMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
