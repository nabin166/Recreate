@model IEnumerable<BankFull.Models.UserMessage?> 


     
    <!--Bootstrap modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1"
        role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <!-- Modal heading -->
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">
                      <i class="fa-solid fa-images"></i>
                    </h5>
                    <button type="button" class="close"
                        data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">
                            ×
                        </span>
                    </button>
                </div>
                <!-- Modal body with image -->
                <div class="modal-body">
                    <img src="gfg.png" />
                </div>
            </div>
        </div>
    </div>
       <div style="width:83vw; scroll-behavior:smooth; overflow:scroll;">

   <table id="data" class="mb-4 table tablecolor wid " style="width:83vw;">
    <thead class="bg-danger">
          <tr>
            @if (@User.IsInRole("Admin"))
            {
                <th>Assigned To</th>
                <th>Sent by</th>
            }
            <th>
                Account No
            </th>

             <th>
               Bank Name
            </th>
            <th>
                Amount
            </th>
            <th>
                Date
            </th>
            <th>
               
            </th>
            
             <th>
                Message
            </th>
            
          
         
            
        </tr>
            
        
    </thead>
    <tbody>
@foreach (UserMessage item in Model) {

         
            
                <tr>   @if (@User.IsInRole("Admin"))
            {
                    <td>
                        @Html.DisplayFor(modelItem => item.User.Name) 
                    </td>
                     <td>
                        @Html.DisplayFor(modelItem => item.tblMessage.BankDetail.User.Name) 
                    </td>
            }
                    <td>
                        @Html.DisplayFor(modelItem => item.tblMessage.BankDetail.AccountNumber) 
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tblMessage.BankDetail.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.tblMessage.Amount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.tblMessage.Date)
                    </td>


                    <td>

                   @*     <img src="~/@Html.DisplayFor(modelItem => item.tblMessage.DocumentPath)" style="cursor:pointer;"  data-toggle="modal" data-target="#exampleModal" width="50px"/> *@

                    </td>




                    <td>
                        @Html.DisplayFor(modelItem => item.tblMessage.Messages)
                        
                    </td>     

                </tr>
            
        }
    </tbody>

    <tfoot class="table-danger">
            <tr>
                <th colspan="1" style="text-align:right">Total: <br/> Sub Total:</th>
                <th></th><th></th><th></th><th></th><th></th><th></th><th></th>
                
            </tr>
        </tfoot>
    
      
</table>
        </div>
 <script>
 
     
$(document).ready(function() {

    $('#data').DataTable(
    
          {
        footerCallback: function (row, data, start, end, display) {
            var api = this.api();
 
            // Remove the formatting to get integer data for summation
            var intVal = function (i) {
                return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
            };
 
            // Total over all pages
            total = api
                .column(4)
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);
 
            // Total over this page
            pageTotal = api
                .column(4, { page: 'current' })
                .data()
                .reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);
 
            // Update footer
            $(api.column(4).footer()).html( pageTotal  + ' <br/>' + total  );
        },
    }
    
    );

});

</script>

     @section scripts{
                     <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.13.1/b-2.3.2/b-html5-2.3.2/b-print-2.3.2/datatables.min.css"/>
 
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.13.1/b-2.3.2/b-html5-2.3.2/b-print-2.3.2/datatables.min.js"></script>



                 }